% nix-darwin
;TODO: fix nix configs (can use https://github.com/rober-m/.dots as reference)

# rebuild nix-darwin configuration
darwin-rebuild switch --flake <flake_directory>\#<nix_config_name>

# update flake
nix flake update

% navi

$ dotfiles_dir: echo "$LUCA_DOTFILES_DIR"


# edit navi config
nvim <dotfiles_dir>/navi/config.yaml

# edit main navi cheatfile
nvim <dotfiles_dir>/navi/cheats/luca/luca.cheat

% python

# make venv in current directory and activate it (fish shell)
python3 -m venv ./.venv && source ./.venv/bin/activate.fish

% aws-cli

# start using aws cli
aws sts get-caller-identity --profile <profile>

% git

# undo last commit but keep changes (before pushing)
git reset --soft HEAD~1

# undo last commit and discard changes (before pushing)
git reset --hard HEAD~1

# switch to branch
git checkout <branch_name>

# create new branch
git checkout -b <branch_name>

# list branches from remote
git branch -r

# list branches from local
git branch

% gitlab

# create merge request
git push --set-upstream origin <branch_name> -o merge_request.create

% report

# create merge request for PR
git commit -m "PR"
git push --set-upstream origin peer-review -o merge_request.create

# create merge request for QA
git commit -m "QA"
git push --set-upstream origin qa -o merge_request.create

# switch to peer-review branch and pull latest changes
git checkout peer-review
git branch --set-upstream-to=origin/peer-review peer-review
git pull

# switch to qa branch and pull latest changes
git checkout qa
git branch --set-upstream-to=origin/qa qa
git pull

# switch to main, pull changes, and create empty 1.0 commit
git checkout main
git pull
git commit --allow-empty -m "1.0"

